User input
 |
 |
 Class Main
 |
 |
 a string
 |
 |
 Class Parse
 |
 |
 regular expression --> primary decide the form --> primary parse the string
 |
 |
 further parsing, use the parssed title type word to decide
 i need to add some more parse tech, formal pass to every token



Primitives data structure


 ColName               Operable                        Container
                          |
                          |
             String    Int   Float   NoValue   NAN

relations:
In the table body every element has a container, the container will be initialized by the value of the element (by regex), so that when initialize container, the contained element will be one of the Operable subclass.
the Colname will contain a column type, the Containers in the corresponding column will compare the column type and it contained elements' type to decide if the element is fit in or not.
When doing operations, we can operate Colname, and then referring to the list of containers, and then do the operatin of the contained element.
when in the main function there is only literal (string, int, float) we can initiate a single container and do the containers operations



the operation has many in common(+-*/; > < >= <= == !=), it can be put into HOF(higher order function) but i don't know how to do it in JAVA.